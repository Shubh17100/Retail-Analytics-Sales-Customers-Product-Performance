Create Database Vrinda_Store;
use Vrinda_store;
Create table Sales (
ID int primary key,
	Order_Id VARCHAR(50) NOT NULL, 
	Cust_ID Bigint,
	Gender Varchar(20),
    Age Int,
	Age_Group Varchar(30),
	Date DATE NOT NULL,
	Month char(10),
	Status Varchar(30), 
	Channel Varchar(40),
	SKU Varchar(60),
    Category Varchar(50),
	Size char(5),
    Qty Int, 
	currency Char(3),
	Amount	Int, 
    ship_city Varchar(50),
	ship_state Varchar(50), 
	ship_postal_code BigInt,
	ship_country Varchar(50),	
    B2B varchar(40)
);

-- Basic Queries

-- 1.Retrieve all data from the table.
		Select * from sales;
        
-- 2.Fetch count distinct customer IDs.
		Select count(distinct cust_Id) from Sales;
        
-- 3.Find orders placed in December 2022.
		Select * from Sales 
        where Month = 'Dec' and date between '2022-12-01' and '2022-12-31';
        
-- 4.Get the total quantity of items sold.
		select category, sum(qty) Total_qty_item from sales
        group by 1;
        
        Select sum(qty) Total_Qty
        from sales;
        
-- 5. Find all orders where the order amount is greater than 500
		Select * from sales 
        where amount > 500;
        
-- 6. Get all orders shipped to 'Delhi'.
			Select * from sales 
            where ship_state = 'Delhi'; 
            
-- 7. Retrieve all orders placed by female customers, sorted by order amount in descending order.
			Select * from Sales 
            where Gender = 'Women'
            order by amount desc;
            
-- 8. Find orders placed in the last 36 months.
			SELECT * FROM Sales WHERE Date >= DATE_SUB(CURDATE(), INTERVAL 36 MONTH);
            
-- 9. Count the total number of orders placed.
			Select count(Order_id) Total_orders from sales;
            
-- 10. Get the total revenue generated by each currency type.
			Select currency , sum(qty * amount) Total_revenue from sales
            group by 1;
            
-- 11. Find the most popular product category (highest quantity sold).
			Select category , sum(qty) Total_qty from sales
            group by category
            order by total_qty desc
            limit 1;
            
-- 12. Get the average order amount per age group.
			select age_group, round(avg(amount),2) avg_amount from sales
            group by 1
            order by 2;
            
-- 13. Find customers who placed more than 5 orders.
			Select cust_id, count(cust_id) Total_count from Sales 
            group by cust_id
            having total_count > 5 
            limit 5;
            
-- 14. Find the top 3 customers with the highest total spending.
			Select cust_id, sum( amount * qty) Total_spending from 
            sales 
            group by 1
            order by 2 desc
            limit 3;
            
-- 15. Find the monthly revenue for each month in descending order.
			Select Month, sum(qty * amount) Revenue from sales 
            group by month
            order by revenue desc;
            
-- 16. Find the percentage of B2B orders vs. B2C orders.
		SELECT B2B, COUNT(Order_ID) * 100.0 / (SELECT COUNT(*) FROM Sales) AS percentage 
		FROM sales
		GROUP BY B2B;
        
-- 17. Find the city that has the highest number of shipments.
			Select Ship_city, count(ship_city) Highest_Shipments from sales 
            group by ship_city
            order by 2 desc
            limit 1;
            
-- 18. Find the SKU with the highest sales amount.
			Select sku, sum(amount * qty) Highest_sales from sales
            group by 1
            order by 2 desc
            limit 1;
            
-- 19. Calculate the average order value (AOV).
            select avg(amount) from sales;
            
-- 20. Find customers who have only placed one order.
		Select cust_id, count(cust_id) Total_count from sales 
		group by 1 
		having total_count = 1
		order by 1;
        
-- Get the customer who made the most recent order (based on the 'Date' column):
		Select cust_id, Max(date) from sales 
        group by 1
        order by 2 desc
        limit 1;
        
-- Count the number of orders for each product category that were shipped to a particular state
		Select Category, ship_state, count(*) Total_orders
        from sales 
        group by 1, 2
        order by 3 desc;
        
-- Find the number of distinct customers (Cust_ID) who purchased products of 'Medium' size:
		Select count(distinct cust_id) from sales 
        where size = 'M';
            
-- Retrieve the orders where the quantity is less than 2 and the amount is less than 500:
		Select * from sales 
        where qty < 2 and amount < 500;
        
-- Get the total number of orders and the average amount spent by customers who made purchases in the 'Set' category:
		SELECT COUNT(Order_ID) AS total_orders, round(AVG(Amount),2) AS avg_amount_spent
		FROM sales
		WHERE Category = 'Set';
        
-- Find the total quantity of items ordered by customers in each 'Age Group':
				Select age_group, sum(qty) total_qty
                from sales 
                group by age_group 
                order by 2 desc;
                
-- List all the customers who placed orders in the 'Myntra' channel and have made purchases in both 'Kurta' and 'Western Dress' categories:
				Select cust_id from sales
                where channel = 'Myntra' and 
                category in ('Kurta', 'Western Dress')
                group by cust_id
                having count(distinct category) = 2
                order by cust_id;
                
-- Find the average order value (Amount) for each channel
				Select channel, round(avg(qty * amount),2) Avg_amt_channel from sales
                group by 1
                order by 2;
                
-- Get the total amount spent and total quantity ordered for each SKU:
			Select sku, sum(amount) total_amt, sum(qty) total_qty from sales
            group by 1;
            
-- List the customers who placed orders in both the 'Top' and 'Set' categories, but only if their total spent exceeds 1000:
					Select cust_id from sales 
                    where category in ('Top', 'Set') and 
                    amount > 1000;
                    
-- Find the most popular product size (Size) based on the total quantity ordered:
					Select size , sum(qty) Total_qty from sales 
                    group by 1
                    order by 2 desc
                    limit 1;
                    
-- List the top 5 customers who spent the most money in a single order:
					Select cust_id , max(amount) from sales
                    group by 1 
                    order by 2 desc 
                    limit 5;
                    
-- Get the total amount spent in each state where orders were shipped:
					Select ship_state , sum(qty * amount) Total_amount from sales 
                    group by 1
                    order by 2;
                    
-- Find the customers who ordered the most products of 'Small' size in 'Western Dress' category:
					Select cust_id, sum(qty) from sales 
                    where size = 's' and 
                    category = 'Western Dress'
                    group by 1
                    order by 2 desc
                    limit 1;
                    
-- Retrieve the total quantity and total amount spent by customers who ordered items from 'ajio' in the first quarter (Jan-Mar):
			Select cust_id, sum(qty) total_qty, sum(amount) total_amt from sales 
            where channel = 'ajio' and 
            month in ('Jan', 'Feb', 'Mar')
            group by 1;
            
-- List all the orders placed by customers in the 'teenager' age group (Age Group = 'teenager') that have a status of 'delivered' and the total quantity greater than 3:
				Select order_id, age_group  , sum(qty)total_qty from sales 
                where age_group = 'Teenager' and 
                status = 'delivered' 
                 group by 1
                having total_qty > 3;
                
-- Find the total amount spent by male customers for 'Electronics' category products in the month of December:
				Select Gender, sum(qty * amount) total_amount from sales 
                where category = 'set' 
                and month = 'dec'
                and Gender = 'Men'
                group by 1;
                
-- List all the customers who made orders with an amount between 500 and 1000, and their respective shipping country:
				Select cust_id, ship_country, amount from sales 
                where amount between 500 and 1000 and 
                ship_country like '%in%'
                order by cust_id ;
                
-- Get the average number of products ordered (Qty) per order in 'Karnataka':
				Select avg(qty) avg_qty from sales 
                where ship_state = 'Karnataka';
                
-- Get the cumulative total of amount spent by each customer (Cust_ID) in ascending order of spending:
			Select cust_id, sum(amount * qty) as total_spent,
            sum(sum(amount * qty)) over (order by sum(amount * qty)) as cumulative_spent
            from sales
            group by cust_id 
            order by total_spent desc;
            
-- Retrieve the second highest total amount by channel:
            
            SELECT channel, SUM(Amount * Qty) AS total_spent
			FROM sales
			GROUP BY channel
			ORDER BY total_spent DESC
			 LIMIT 1 OFFSET 2;
            
            SELECT Channel, total_spent 
			FROM (
				SELECT Channel, SUM(Amount * Qty) AS total_spent
				FROM sales
				GROUP BY Channel
			) AS subquery
			WHERE total_spent < (SELECT MAX(total_spent) FROM (SELECT SUM(Amount * Qty) AS total_spent FROM sales GROUP BY Channel) AS max_sub)
			ORDER BY total_spent DESC
			LIMIT 1;
            
-- Retrieve the second highest total amount spent by customer
		Select cust_id, total_spent 
        from (
        Select cust_id, sum(amount * qty) as total_spent 
        from sales 
        group by cust_id) as subquery
        where total_spent < (select max(total_spent) from (select sum(amount * qty) as total_spent from sales group by cust_id) as max_spent)
        order by total_spent desc
        limit 1;
        
-- Retrieve the third highest sales by category 
        Select category, total_spent
        from (
        select category, sum(amount * qty) as total_spent
        from sales 
        group by category) as subquery
        where total_spent < (select max(total_spent) from (select sum(qty * amount) as total_spent from sales  group by category) as total_sales)
        order by total_spent desc
        limit 1
        offset 1;
        
-- Get the running total of the amount spent by customers over time, ordered by the date of their orders:
	SELECT 
    Cust_ID, 
    Date, 
    Order_ID,
    Amount * Qty AS order_total,
    SUM(Amount * Qty) OVER (PARTITION BY Cust_ID ORDER BY Date, Order_ID ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS running_totalko
	FROM sales
	ORDER BY Cust_ID, Date, Order_ID;
    
-- Find the customer who placed the first order in the dataset (based on 'Date'), along with the details of their first order:
			Select * from sales 
            where date = (select min(date) from sales )
            limit 1;
            
-- Find customers who have made orders where the amount spent was above the average for their respective gender:
SELECT v.Cust_ID, v.Gender, SUM(v.Amount * v.Qty) AS total_spent
FROM sales v
JOIN (
    -- Subquery to calculate average spending per gender
    SELECT Gender, AVG(total_spent) AS avg_spent
    FROM (
        -- Subquery to calculate total spending per customer
        SELECT Cust_ID, Gender, SUM(Amount * Qty) AS total_spent
        FROM sales
        GROUP BY Cust_ID, Gender
    ) AS customer_spending
    GROUP BY Gender
) avg_table 
ON v.Gender = avg_table.Gender
GROUP BY v.Cust_ID, v.Gender;

-- Find the customers who placed orders with the highest total quantity and their associated product categories:
	SELECT Cust_ID, Category, SUM(Qty) AS total_qty_ordered
	FROM sales
	WHERE Cust_ID IN (
		-- Subquery to find customers with the highest total quantity ordered
		SELECT Cust_ID
		FROM (
			SELECT Cust_ID, SUM(Qty) AS total_qty
			FROM sales
			GROUP BY Cust_ID
		) AS customer_totals
		WHERE total_qty = (
			-- Get the max total quantity ordered by any customer
			SELECT MAX(total_qty) 
			FROM (
				SELECT SUM(Qty) AS total_qty
				FROM sales
				GROUP BY Cust_ID
			) AS max_totals
		)
	)
	GROUP BY Cust_ID, Category;